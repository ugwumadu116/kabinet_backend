{"version":3,"sources":["../../server/services/kabinet.services.js"],"names":["KabinetService","createEvent","user","date","title","event_type","location","organization_name","description","category","organizer_info","website","organizer_contact","sql","bindParameters","client","db","connect","result","query","release","rows","createInterest","contact","eventid","getEvent","getInterest","delEvent","id"],"mappings":";;;;;;;AAAA;;;;AAEA,MAAMA,cAAN,CAAqB;AACK,eAAXC,WAAW,CAACC,IAAD,EAAO;AAE7B,UAAM;AACJC,MAAAA,IADI;AAEJC,MAAAA,KAFI;AAGJC,MAAAA,UAHI;AAIJC,MAAAA,QAJI;AAKJC,MAAAA,iBALI;AAMJC,MAAAA,WANI;AAOJC,MAAAA,QAPI;AAQJC,MAAAA,cARI;AASJC,MAAAA,OATI;AAUJC,MAAAA;AAVI,QAWFV,IAXJ;AAeA,UAAMW,GAAG,GAAG,iNAAZ;AACA,UAAMC,cAAc,GAAG,CAACX,IAAD,EAAOC,KAAP,EAAcC,UAAd,EAA0BC,QAA1B,EAAoCC,iBAApC,EAAuDC,WAAvD,EAAoEC,QAApE,EAA8EC,cAA9E,EAA8FC,OAA9F,EAAuGC,iBAAvG,CAAvB;AACA,UAAMG,MAAM,GAAG,MAAMC,YAAGC,OAAH,EAArB;AACA,UAAMC,MAAM,GAAG,MAAMH,MAAM,CAACI,KAAP,CAAaN,GAAb,EAAkBC,cAAlB,CAArB;AACAC,IAAAA,MAAM,CAACK,OAAP;AACA,WAAOF,MAAM,CAACG,IAAP,CAAY,CAAZ,CAAP;AAED;;AAE0B,eAAdC,cAAc,CAACpB,IAAD,EAAO;AAEhC,UAAM;AACJqB,MAAAA,OADI;AAEJC,MAAAA;AAFI,QAGFtB,IAHJ;AAOA,UAAMW,GAAG,GAAG,2EAAZ;AACA,UAAMC,cAAc,GAAG,CAACS,OAAD,EAAUC,OAAV,CAAvB;AACA,UAAMT,MAAM,GAAG,MAAMC,YAAGC,OAAH,EAArB;AACA,UAAMC,MAAM,GAAG,MAAMH,MAAM,CAACI,KAAP,CAAaN,GAAb,EAAkBC,cAAlB,CAArB;AACAC,IAAAA,MAAM,CAACK,OAAP;AACA,WAAOF,MAAM,CAACG,IAAP,CAAY,CAAZ,CAAP;AAED;;AAEoB,eAARI,QAAQ,GAAG;AACtB,UAAMZ,GAAG,GAAG,6BAAZ;AACA,UAAME,MAAM,GAAG,MAAMC,YAAGC,OAAH,EAArB;AACA,UAAMC,MAAM,GAAG,MAAMH,MAAM,CAACI,KAAP,CAAaN,GAAb,CAArB;AACAE,IAAAA,MAAM,CAACK,OAAP;AACA,WAAOF,MAAM,CAACG,IAAd;AACD;;AAEuB,eAAXK,WAAW,GAAG;AACzB,UAAMb,GAAG,GAAG,+BAAZ;AACA,UAAME,MAAM,GAAG,MAAMC,YAAGC,OAAH,EAArB;AACA,UAAMC,MAAM,GAAG,MAAMH,MAAM,CAACI,KAAP,CAAaN,GAAb,CAArB;AACAE,IAAAA,MAAM,CAACK,OAAP;AACA,WAAOF,MAAM,CAACG,IAAd;AACD;;AAEoB,eAARM,QAAQ,CAACzB,IAAD,EAAO;AAC1B,UAAMW,GAAG,GAAG,yCAAZ;AACA,UAAMC,cAAc,GAAG,CAACZ,IAAI,CAAC0B,EAAN,CAAvB;AACA,UAAMb,MAAM,GAAG,MAAMC,YAAGC,OAAH,EAArB;AACA,UAAMC,MAAM,GAAG,MAAMH,MAAM,CAACI,KAAP,CAAaN,GAAb,EAAkBC,cAAlB,CAArB;AACAC,IAAAA,MAAM,CAACK,OAAP;AACA,WAAOF,MAAM,CAACG,IAAd;AAED;;AArEkB;;eA0ENrB,c","sourcesContent":["import db from '../config/db';\n\nclass KabinetService {\n  static async createEvent(user) {\n \n    const {\n      date,\n      title,\n      event_type,\n      location,\n      organization_name,\n      description,\n      category,\n      organizer_info,\n      website,\n      organizer_contact,\n    } = user;\n\n   \n    \n    const sql = 'INSERT INTO kabinetevents (date, title, event_type, location, organization_name, description, category, organizer_info, website, organizer_contact) VALUES($1, $2, $3, $4, $5, $6, $7, $8, $9, $10) RETURNING *';\n    const bindParameters = [date, title, event_type, location, organization_name, description, category, organizer_info, website, organizer_contact];\n    const client = await db.connect();\n    const result = await client.query(sql, bindParameters);\n    client.release();\n    return result.rows[0];\n   \n  }\n\n  static async createInterest(user) {\n  \n    const {\n      contact,\n      eventid\n    } = user;\n\n   \n    \n    const sql = 'INSERT INTO kabinetinterest (contact, eventid) VALUES($1, $2) RETURNING *';\n    const bindParameters = [contact, eventid];\n    const client = await db.connect();\n    const result = await client.query(sql, bindParameters);\n    client.release();\n    return result.rows[0];\n   \n  }\n\n  static async getEvent() {\n    const sql = 'SELECT * from kabinetevents';\n    const client = await db.connect();\n    const result = await client.query(sql);\n    client.release();\n    return result.rows;\n  }\n\n  static async getInterest() {\n    const sql = 'SELECT * from kabinetinterest';\n    const client = await db.connect();\n    const result = await client.query(sql);\n    client.release();\n    return result.rows;\n  }\n\n  static async delEvent(user) {\n    const sql = 'DELETE FROM kabinetevents WHERE id = $1';\n    const bindParameters = [user.id];\n    const client = await db.connect();\n    const result = await client.query(sql, bindParameters);\n    client.release();\n    return result.rows;\n    \n  }\n\n \n\n}\nexport default KabinetService;\n"],"file":"kabinet.services.js"}